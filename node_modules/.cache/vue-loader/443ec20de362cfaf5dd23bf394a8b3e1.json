{"remainingRequest":"/home/runner/work/U3_Diversidad_inclusion/U3_Diversidad_inclusion/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/runner/work/U3_Diversidad_inclusion/U3_Diversidad_inclusion/node_modules/pug-plain-loader/index.js!/home/runner/work/U3_Diversidad_inclusion/U3_Diversidad_inclusion/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/U3_Diversidad_inclusion/U3_Diversidad_inclusion/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U3_Diversidad_inclusion/U3_Diversidad_inclusion/src/views/curso/Tema3.vue?vue&type=template&id=a00ca8ba&lang=pug&","dependencies":[{"path":"/home/runner/work/U3_Diversidad_inclusion/U3_Diversidad_inclusion/src/views/curso/Tema3.vue","mtime":1756097081906},{"path":"/home/runner/work/U3_Diversidad_inclusion/U3_Diversidad_inclusion/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Diversidad_inclusion/U3_Diversidad_inclusion/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U3_Diversidad_inclusion/U3_Diversidad_inclusion/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U3_Diversidad_inclusion/U3_Diversidad_inclusion/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Diversidad_inclusion/U3_Diversidad_inclusion/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}